{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"T.e.o - The Excellent Organizer","text":""},{"location":"#about-the-project","title":"About the project","text":"<p>T.e.o, previously referred to as P.o.r.o, is a multifunctional bot designed to enhance forum management. Its moderation and logging suite keep track of forum posting and keep your moderator accountable. Its auto-moderator capabilities also allow it to filter out certain types of queries without need for human intervention, lightening the load on the staff team. Finally, T.e.o is designed to be fast and easy to use.</p>"},{"location":"#interoperability","title":"Interoperability","text":"<p>T.e.o is probably a useful bot for your server if:</p> <ul> <li> Your server is active and needs automatic moderation</li> <li> You want to give more power to your moderators</li> <li> You need a long-term punishment management system</li> </ul> <p>T.e.o is probably NOT the right bot for your server if:</p> <p>\u274c You don't already know how to use forum thread</p> <p>\u274c You aren't able and willing to read this wiki to solve most problems</p> <p>If any of the above apply, then T.e.o will probably not be the best bot for your server, and you should consider searching on discord.bots.gg for a different moderation bot.</p>"},{"location":"#techstack","title":"Techstack","text":"<p>The repository structure follows the conceptual architecture of Teobot, which consists of three loosely-coupled sub-systems.</p> <p>To briefly explain these three sub-systems:</p> <ul> <li>Notificator employs <code>Hikari</code> utilities to catch new threads created event and directly message moderator for resolution.</li> <li>Storage relies on <code>PostgreSQL</code> as a robust and feature-rich database system for persistent storage of forum queries and session log, while leveraging <code>SQLAlchemy</code> as the ORM tool for simplified interaction with the database.</li> <li>Logger utilizes built-in <code>Logging</code> to record and manage thread events, errors, and messages within the server. It employs different log levels to categorize messages, providing a comprehensive overview of system activities.</li> </ul>"},{"location":"#documentation","title":"Documentation","text":"<p>Since Teobot is built on the basis of Hikari library, it is essential to look for the library documentation for further implementation. </p> <ul> <li>Hikari: hikari-py.dev</li> <li>Lightbulb: lightbulb.readthedocs.io</li> </ul>"},{"location":"features/","title":"Features","text":""},{"location":"features/#question-forum","title":"Question forum","text":"<p>Teobot offers a streamlined solution for managing question forum posts within your server. Users can submit their questions through designated forum channels, categorize them based on topics or subjects, and moderators can review and assist in answering your questions.</p> <p>With features like <code>tagging</code>, <code>searching</code>, and <code>sorting</code>, users can easily navigate through the forum to find relevant questions or contribute answers. The bot ensures an organized and efficient process for sharing knowledge and fostering discussions among community members.</p>"},{"location":"features/#exam-request","title":"Exam request","text":"<p>Simplify the process of handling exam requests with the Discord bot's dedicated feature. Users can submit their exam requests specifying details such as the exam name, date, time, and any additional instructions. Moderators can then review and schedule exams accordingly, sending automated notifications to users with the relevant details. </p> <p>Additionally, the bot can manage exam registrations, track attendance, and provide reminders to ensure a smooth and well-organized examination process. By centralizing exam management within Discord, the bot enhances communication and coordination for both administrators and participants.</p>"},{"location":"features/#er-models","title":"ER Models","text":"<pre><code>erDiagram\n    threads {\n        int id PK\n        string name\n        datetime created_at\n        int[] tags\n        int[] messages\n        int author_id FK\n    }\n\n    users {\n        int id PK\n        string name\n        bool is_bot\n    }\n\n    user_roles {\n        int user_id PK, FK\n        int role_id PK, FK\n    }\n\n    roles {\n        int id PK\n        string name\n        int position\n    }\n\n    users ||--|{ user_roles : has\n    roles ||--|{ user_roles : \"belongs to\"\n\n    users ||--o{ threads : creates\n\n    tags {\n        int id PK\n        string name\n    }\n\n    threads ||--|{ tags : has\n\n    messages {\n        int id PK\n        string content\n        datetime created_at\n    }\n\n    threads ||--|{ messages : has\n</code></pre> <p>Using <code>SQLAlchemy</code> as ORM to connect with PostgreSQL database allows for efficient management of database interactions. Example of the <code>Thread</code> model designed using SQLAlchemy: <pre><code>class Thread(Base):\n    __tablename__ = \"threads\"\n\n    id: Mapped[str] = mapped_column(primary_key=True)\n    name: Mapped[str] = mapped_column(nullable=False)\n    created_at: Mapped[datetime] = mapped_column(\n        DateTime(timezone=True), server_default=func.now(), nullable=False)\n    tags: Mapped[list[str]] = mapped_column(ARRAY(String), nullable=False)\n    messages: Mapped[list[str]] = mapped_column(ARRAY(String), nullable=False)\n\n    author_id: Mapped[str] = mapped_column(\n        ForeignKey(\"users.id\"), nullable=False)\n    author: Mapped[\"User\"] = relationship(back_populates=\"threads\")\n</code></pre></p>"},{"location":"features/#troubleshooting","title":"Troubleshooting","text":"<p>Bot isn't alerting new forum threads!</p> <ol> <li>Check that Vortex has sufficient permissions as described above.</li> <li>Check which roles are being ignored with <code>&gt;&gt;ignored</code>. Take a look at the Ignoring Roles and Channels page for more information about ignored roles.</li> <li>Check that you have the automod feature enabled with the <code>&gt;&gt;settings</code> command.</li> </ol> <p>Make sure MusicCat is not muted for you by right clicking it in your voice channel. If it is not muted then try changing the voice region in Server Settings (you can change it right back).This will reset the voice connection to discord servers which may be wonky at times.</p> <p>Muting isn't working!</p> <ol> <li>Make sure that the Muted role exists and is configured properly for each channel. The easy way to configure it is to use the <code>&gt;&gt;setup</code> muterole command.</li> <li>Make sure that there aren't any roles with a \u2705 Send Messages override in your text channel settings; if a user has a role with a \u2705 Send Messages override in a channel, they will be able to talk through the Muted role.</li> </ol>"},{"location":"features/#getting-further-support","title":"Getting further support","text":""},{"location":"features/#join-the-support-server","title":"Join the Support Server","text":"<p>Feel free to join the support server and ask questions in the <code>#support</code> channel. Please make sure to include the following:</p> <ol> <li>The exact issue you are having</li> <li>Your server's ID</li> <li>A screenshot of your server's <code>&gt;&gt;settings</code></li> </ol> <p>Please note that questions may be ignored if the information can already be found on this wiki.</p>"},{"location":"features/#open-an-issue","title":"Open an Issue","text":"<p>If you believe you have found a bug, you can open an issue. Please do not use the issue page for questions or confusions.</p> <p>Join support server</p>"},{"location":"release/","title":"Changelog","text":"<p>Note</p> <p>Major and minor releases also include the changes specified in prior development releases.</p>"},{"location":"release/#100dev16-2024-02-10","title":"1.0.0.dev16 (2024-02-10)","text":"<p>To be released</p>"},{"location":"release/#100dev15-2024-01-03","title":"1.0.0.dev15 (2024-01-03)","text":""},{"location":"release/#features","title":"Features","text":"Question forumExam request <ul> <li>Alert moderator regarding recent forum query</li> <li>Add embed link to forum thread through discord embed</li> <li>Obtain and communicate resolution to address query posted</li> </ul> <ul> <li>Notify and embed link to exam platform</li> </ul>"},{"location":"release/#bugfixes","title":"Bugfixes","text":"<ul> <li> Resolved issue where bot catches all <code>NewMessageCreate</code> events.</li> <li> Resolved bug where bot send notification twice on new thread created.</li> </ul> <p>The changelog was added during the development of version 1.0.0.dev14 (2023-12-01), so nothing prior is documented here.</p>"}]}